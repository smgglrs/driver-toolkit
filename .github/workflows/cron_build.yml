---
name: Build Driver Toolkit images

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

env:
  REGISTRY: quay.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.gen-matrix.outputs.matrix }}
    steps:
      - name: Checkout current repository to get the matrix file
        uses: actions/checkout@v3

      - name: Generate the build matrix
        id: gen-matrix
        run: |
          echo "${PULL_SECRET}" > ${PULL_SECRET_FILE}
          ${GITHUB_WORKSPACE}/build-matrix.sh
          matrix=$(cat ${GITHUB_WORKSPACE}/build-matrix.json)
          echo "::set-output name=matrix::${matrix}"
        env:
          PULL_SECRET: ${{ secrets.PULL_SECRET }}
          PULL_SECRET_FILE: pull-secret

  build-image:
    needs: build-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.build-matrix.outputs.matrix) }}
      max-parallel: 4
      fail-fast: false
    steps:
      - name: Check if driver-toolkit image exists for kernel ${{ matrix.versions.kernel }}
        id: get-image
        continue-on-error: true
        run: curl --fail https://${{ env.REGISTRY }}/v2/${{ github.repository }}/manifests/${{ matrix.versions.kernel }}

      - name: Checkout current repository for the Dockerfiles
        if: steps.get-image.outcome == 'failure'
        uses: actions/checkout@v2

      - name: Lint Dockerfile
        if: steps.get-image.outcome == 'failure'
        uses: hadolint/hadolint-action@v1.7.0
        with:
          dockerfile: ./Dockerfile
          failure-threshold: error

      - name: Set up QEMU
        if: steps.get-image.outcome == 'failure'
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        if: steps.get-image.outcome == 'failure'
        uses: docker/setup-buildx-action@v1

      - name: Login to the container registry
        if: steps.get-image.outcome == 'failure'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Build and push driver-toolkit:${{ matrix.versions.kernel }}
        if: steps.get-image.outcome == 'failure'
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.versions.kernel }}"
          platforms: "${{ matrix.versions.archs }}"
          build-args: |
            "RHEL_VERSION=${{ matrix.versions.rhel }}"
            "KERNEL_VERSION=${{ matrix.versions.kernel }}"
          secrets: |
            "RHSM_ORG=${{ secrets.RHSM_ORG }}"
            "RHSM_ACTIVATIONKEY=${{ secrets.RHSM_ACTIVATIONKEY }}"
